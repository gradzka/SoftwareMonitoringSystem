@model IEnumerable<SoftwareMonitoringSystem.Device>
@{
    ViewBag.Title = "Strona główna";
}

<div class="row" style="margin-top:20px;margin-bottom:20px;margin-left:0px;margin-right:0px;">
    <div style="float:left;">
        <h2 style="margin:0px;">Zdefiniowane urządzenia z&nbspagentami</h2>
    </div>
        <div style="float:right;">
            
            <button type="submit" title="Wyszukaj nowe urządzenia" class="btn btn-primary" style="float:right;">Wyszukaj urządzenia <span class="glyphicon glyphicon-search"></span></button>
        </div>
</div>


<table id="DeviceTable" class="table">
    <tr>
        <th></th>
        <th>
            ID
        </th>
        <th>
            Adres MAC
        </th>
        <th>
            Producent
        </th>
        <th>
            Adres IP
        </th>
        <th>
            Opis
        </th>
        <th>
            Status
        </th>
        <th></th>
        <th></th>
    </tr>

    

    <tr style="background-color:#f9fbe7">
        <td>@Html.ActionLink("Skanuj", "Method", "Controller", null, new { @class = "btn btn-primary", @style = "float:center;", @title = "Skanuj zaznaczone urządzenia" })</td>
        <td></td>
        @using (Html.BeginForm("AddDevice", "Home", FormMethod.Post, new { @id = "NewDeviceForm" }))
        {
            @Html.AntiForgeryToken()
            <td>@Html.Editor("MACAddress", "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Adres MAC", style = "max-width:160px;", @required = "" } })</td>
            <td>@Html.Editor("Manufacturer", "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Producent", style = "max-width:150px;", @required = "" } })</td>
            <td>@Html.Editor("IPAddress", "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Adres IP", style = "max-width:140px;", @required = "" } })</td>
            <td>@Html.Editor("Description", "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Opis", style = "max-width:200px;" } })</td>
            <td colspan="2">
                <button type="submit" title="Dodaj nowe urządzenie" class="btn btn-success" style="margin-top: 3px; margin-bottom: 3px" ;">Dodaj</button>
            </td>
        }
        @using (Html.BeginForm("Delete", "Home", FormMethod.Post, new { @id = "DelDeviceForm" }))
        {
            @Html.AntiForgeryToken()
            <td>
                <button type="submit" title="Usuń zaznaczone urządzenia" class="btn btn-danger" style="margin-top: 3px; margin-bottom: 3px" ;">Usuń</button>
            </td>
        }
    </tr>
    
            <tr style="background-color:#e3f2fd">
                <td align="center">@Html.CheckBox("LDev", false, new { @onchange = "checkAll(this)" })</td>
                <td>@Html.Editor("IDFilter", "", new { htmlAttributes = new { @class = "form-control", @placeholder = "ID", style = "max-width:50px;", @name = "", @onkeyup = "FilterDevices()" } })</td>
                <td>@Html.Editor("MACFilter", "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Adres MAC", style = "max-width:160px;", @name = "", @onkeyup = "FilterDevices()" } })</td>
                <td>@Html.Editor("ManufacturerFilter", "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Producent", style = "max-width:150px;", @name = "", @onkeyup = "FilterDevices()" } })</td>
                <td>@Html.Editor("IPFilter", "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Adres IP", style = "max-width:140px;", @name = "", @onkeyup = "FilterDevices()" } })</td>
                <td>@Html.Editor("DescriptionFilter", "", new { htmlAttributes = new { @class = "form-control", @placeholder = "Opis", style = "max-width:200px;", @name = "", @onkeyup = "FilterDevices()" } })</td>
                <td></td>
                <td></td>
                <td align="center">@Html.CheckBox("RDev", false, new { @onchange = "checkAll(this)" })</td>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td align="center">@Html.CheckBox("LDev", false)</td>
                    <td>@Html.DisplayFor(modelItem => item.DeviceID)</td>
                    <td>@Html.ActionLink(item.MACAddress, "Details", new { id = item.DeviceID }, new { style = "color:#0d47a1;", @title = "Przejdź" })</td>
                    <td>@Html.DisplayFor(modelItem => item.Manufacturer)</td>
                    <td>@Html.DisplayFor(modelItem => item.IPAddress)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>
                        @if (item.IsActive == 1)
                        {
                            @Html.ActionLink("Aktywny", "ChangeActive", new { item.DeviceID }, new { @class = "btn btn-success", @style = "margin-top: 3px; margin-bottom: 3px" })
                        }
                        else
                        {
                            @Html.ActionLink("Nieaktywny", "ChangeActive", new { item.DeviceID }, new { @class = "btn btn-danger", @style = "margin-top: 3px; margin-bottom: 3px" })
                        }
                    </td>
                    <td>@Html.ActionLink("Edytuj", "Edit", new { item.DeviceID }, new { @class = "btn btn-primary", @style = "margin-top: 3px; margin-bottom: 7px" })</td>
                    <td align="center">@Html.CheckBox("RDev", false, new { @onchange = "highlightRow(this)" })</td>
                </tr>
            }
        
    </table>




@section Scripts {
    <script type="text/javascript">
        function FilterDevices() {
            var table = document.getElementById("DeviceTable");
            var length = table.children[0].children.length

            var IDFilter = document.getElementById("IDFilter").value;
            var MACFilter = document.getElementById("MACFilter").value.toUpperCase();
            var ManufacturerFilter = document.getElementById("ManufacturerFilter").value.toUpperCase();
            var IPFilter = document.getElementById("IPFilter").value.toUpperCase();
            var DescriptionFilter = document.getElementById("DescriptionFilter").value.toUpperCase();

            var index;
            var row;

            for (index = 3; index < length; index++) {
                row = table.children[0].rows[index];

                if (row.cells[1].textContent.startsWith(IDFilter) &&
                    row.cells[2].textContent.toUpperCase().startsWith(MACFilter) &&
                    row.cells[3].textContent.toUpperCase().startsWith(ManufacturerFilter) &&
                    row.cells[4].textContent.toUpperCase().startsWith(IPFilter) &&
                    row.cells[5].textContent.toUpperCase().startsWith(DescriptionFilter))
                {
                    row.style.display = "";
                }
                else {
                    row.style.display = "none";
                }
            }
        }

        //https://stackoverflow.com/a/32555021
        $(function () {
            $("#NewDeviceForm").on('submit', function (e) {
                e.preventDefault() // prevent the form's normal submission
                var dataToPost = $(this).serialize()

                $.post("AddDevice", dataToPost)
                    .done(function (response, status, jqxhr) {
                        if (response != "Error" && response != "Manufacturer is empty" && response != "Occupied MAC address" && response != "Inproper MAC address" && response != "Occupied IP address" && response != "Inproper IP address") {
                            AddDevice(response);
                            var table = document.getElementById("DeviceTable");
                            table.rows[1].cells[2].children[0].value = "";
                            table.rows[1].cells[3].children[0].value = "";
                            table.rows[1].cells[4].children[0].value = "";
                            table.rows[1].cells[5].children[0].value = "";
                        }
                        else {
                            console.log(response);
                        }
                       
                    })
                    .fail(function (jqxhr, status, error) {
                        console.log("ERROR");
                    })
            })

            $("#DelDeviceForm").on('submit', function (e) {
                e.preventDefault()
                //var dataToPost = $(this).serialize()

                var IDs = [];
                var rowsToDelete = [];

                var table = document.getElementById("DeviceTable");
                var length = table.children[0].children.length
                var index;
                var row;

                for (index = 3; index < length; index++) {
                    row = table.children[0].rows[index];

                    if (row.cells[8].children[0].checked) {
                        IDs.push(parseInt(row.cells[1].textContent));
                        rowsToDelete.push(row);
                    }
                }

                $.post("Delete", { IDs:IDs})
                    .done(function (response, status, jqxhr) {
                        if (response == "Success") {
                            for (var i = rowsToDelete.length -1; i >=0; i--) {
                                table.deleteRow(rowsToDelete[i].rowIndex);
                            }
                        }
                        else {
                            console.log(response);
                        }

                    })
                    .fail(function (jqxhr, status, error) {
                        console.log("ERROR");
                    })
            })
        })

        function AddDevice(response) {
            var table = document.getElementById("DeviceTable");
            if (table != 0) {

                var row = table.insertRow(3);
                for (var i = 0; i < 9; i++) {
                    row.insertCell(0);
                }

                row.cells[0].innerHTML = "<input id=\"LDev\" name=\"LDev\" value=\"true\" type=\"checkbox\"><input name=\"LDev\" value=\"false\" type=\"hidden\">";
                row.cells[0].align = "center";
                row.cells[1].innerHTML = response.DeviceID;
                row.cells[2].innerHTML = "<a href=\"/DevMGMT/Details/" + response.DeviceID + "\" style=\"color:#0d47a1;\" title=\"Przejdź\">" + response.MACAddress + "</a>";
                row.cells[3].innerHTML = response.Manufacturer;
                row.cells[4].innerHTML = response.IPAddress;
                row.cells[5].innerHTML = response.Description;
                row.cells[6].innerHTML = "<a class=\"btn btn-danger\" href=\"/DevMGMT/ChangeActive?DeviceID=" + response.DeviceID + "\" style=\"margin-top: 3px; margin-bottom: 3px\">Nieaktywny</a> ";
                row.cells[7].innerHTML = "<a class=\"btn btn-primary\" href=\"/DevMGMT/Edit?DeviceID=" + response.DeviceID + "\" style=\"margin-top: 3px; margin-bottom: 7px\">Edytuj</a>\n ";
                row.cells[8].innerHTML = "<input id=\"RDev\" name=\"RDev\" onchange=\"highlightRow(this)\" value=\"true\" type=\"checkbox\"><input name=\"RDev\" value=\"false\" type=\"hidden\">\n ";
                row.cells[8].align = "center";
            }
        }

        function checkAll(checkbox) {

            var checkboxes = document.getElementsByName(checkbox.name);
            if (checkbox.checked) {
                for (var i = 0; i < checkboxes.length; i++) {
                    if (checkboxes[i].type == 'checkbox') {
                        if (checkboxes[i] != checkbox) {
                            if (checkboxes[i].checked != checkbox.checked) {
                                checkboxes[i].click();
                            }
                        }
                    }
                }
            } else {
                for (var i = 0; i < checkboxes.length; i++) {
                    if (checkboxes[i].type == 'checkbox') {
                        if (checkboxes[i] != checkbox) {
                            if (checkboxes[i].checked != checkbox.checked) {
                                checkboxes[i].click();
                            }
                        }
                    }
                }
            }
        }

        function highlightRow(checkbox) {
            $(checkbox.parentNode.parentNode).toggleClass('ChBoxChecked');
        }
    </script>

}